name: get release

on:
  workflow_dispatch:

jobs:
  get-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Get release by name
        id: get_release
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const releases = response.data;
            const releaseNameToFind = "v1.2"; // Replace with the name you're searching for

            const foundRelease = releases.find(release => release.name.includes(releaseNameToFind));
            
            if (foundRelease) {
              console.log(`Found release ${foundRelease.name} with tag ${foundRelease.tag_name}`);
              console.log(`URL: ${foundRelease.html_url}`);
              console.log(`Assets: ${foundRelease.assets.map(asset => asset.name).join(', ')}`);

              // You can use outputs to pass data to subsequent steps if needed
              return { releaseName: foundRelease.name, tagName: foundRelease.tag_name, releaseUrl: foundRelease.html_url };
            } else {
              console.log(`No release found with the name ${releaseNameToFind}`);
              return { error: `No release found with the name ${releaseNameToFind}` };
            }
      

      - name: Use found release information
        run: echo "Found release ${{ steps.get_release.outputs.releaseName }} with tag ${{ steps.get_release.outputs.tagName }} at ${{ steps.get_release.outputs.releaseUrl }}"
